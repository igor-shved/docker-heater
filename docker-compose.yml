version: "3.8"

services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ${WORKDIR_LOCAL}:${WORKDIR_CONTAINER}
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/log:/var/log/nginx/
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/user.d:/etc/nginx/user.d
      - ./nginx/ssl.d:/etc/nginx/ssl.d
    working_dir: ${WORKDIR_CONTAINER}
    depends_on:
      - php_fpm
    networks:
      - app_net
    container_name: app_nginx
  php_fpm:
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "8080:8080"
    build:
      context: ./
      args:
        PHP_VER: ${PHP_VER}
        APP_USER: ${APP_USER}
        APP_UID: ${APP_UID}
      dockerfile: ./php-fpm/DockerFile
    working_dir: ${WORKDIR_CONTAINER}
    volumes:
      - ${WORKDIR_LOCAL}:${WORKDIR_CONTAINER}
      - ./host/heater-old/logs:/var/www/logs
      #- ./php-fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
      #- ./php-fpm/z-debug.ini:/usr/local/etc/php/conf.d/z-xdebug.ini
    #environment:
     # XDEBUG_CONFIG: "discover_client_host=true client_host=host.docker.internal remote_enable=1 log_level=0"
      #PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - mysql
    networks:
      - app_net
    container_name: app_php
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/db:/var/lib/mysql
      - ./mysql/log:/var/log/mysql
    env_file:
      - env/mysql.env
    #environment:
      #MYSQL_DATABASE: heater
      #MYSQL_USER: webdev
      #MYSQL_ROOT_PASSWORD: root
      #MYSQL_PASSWORD: 12345
    networks:
      - app_net
    container_name: app_mysql
  pma:
    image: phpmyadmin:latest
    restart: unless-stopped
    ports:
      - "81:80"
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      MYSQL_USER: webdev
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: 12345
      UPLOAD_LIMIT: 10000M
    networks:
      - app_net
    container_name: app_pma
  # redis:
    # image: redis:latest
    # ports:
      # - "6379:6379"
    # networks:
      # - app_net
    # container_name: app_redis
networks:
  app_net:
    driver: bridge
